name: check

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  check:
    strategy:
      matrix:
        os:
          - name: ubuntu-latest
            version: stable
          - name: macos-latest
            version: stable
          - name: macos-13
            version: stable

          # bleeding check
          # 1. install latest toolchain
          # 2. install latest core library from github.com
          - name: ubuntu-latest
            version: bleeding
          - name: macos-latest
            version: bleeding
          - name: macos-13
            version: bleeding

      fail-fast: false
    runs-on: ${{ matrix.os.name }}
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4

      - name: install stable version on unix
        if: ${{ matrix.os.version == 'stable' }}
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash

      - name: install bleeding version on unix
        if: ${{ matrix.os.version == 'bleeding' }}
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash -s bleeding
        # passing bleeding as argument to unix.sh

      - name: add env path on unix
        run: |
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: moon version
        run: |
          moon version --all
          moonrun --version

      - name: install module dependencies
        run: |
          moon update
          moon install

      - name: moon check
        run: moon check --deny-warn

      - name: moon info
        run: |
          moon info --target native
          git diff --exit-code

      - name: format diff
        run: |
          moon fmt
          git diff --exit-code

      - name: Set ulimit on unix
        run: |
          ulimit -s 8176

      - name: moon test
        run: |
          moon test --target native
          moon test --target native --release

      - name: moon test --doc
        run: |
          moon test --doc

  moon-json-format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: check `moon.*.json` format
        shell: bash
        run: |
          _passed=0;
          for f in $(find . -type f -name "moon.*.json"); do
            if ! jq '.' $f > /dev/null; then
              echo $f;
              _passed=1;
            fi
          done
          (exit $_passed)

  typo-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      FORCE_COLOR: 1
      TYPOS_VERSION: v1.19.0
    steps:
      - name: download typos
        run: curl -LsSf https://github.com/crate-ci/typos/releases/download/$TYPOS_VERSION/typos-$TYPOS_VERSION-x86_64-unknown-linux-musl.tar.gz | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: check typos
        run: typos
